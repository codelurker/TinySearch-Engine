http://www.cs.dartmouth.edu/~sasho/privdir
3
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>

  <style type="text/css">
.math {
    font-style: italic;
}
</style>

    <title>Private Directory Server Project</title>

  </head>

  <body>
    <h1>Private Directory Server Project</h1>

<p>
This is the home of the <em>Private Information Retrieval</em> (PIR) Server
project of <a href="/~sasho/">Alex Iliev</a> and <a href="/~sws/">Sean
Smith</a>, at the Dartmouth College <a
href="http://www.cs.dartmouth.edu/~pkilab/">PKI Lab</a>.
</p>

<h2>Objectives</h2>
<p>
PIR aims to enable a user Aphro to retrieve information from a server, without
the server being able to tell what she got. For example Aphro may want to get a
book description from a library website, but she for whatever reason doesn't
want the library to know which book it was. More accurately, she doesn't want
the library <em>to be able to know</em>.
</p>
<p>
In this prototype we address the less sexy subject of retrieving X.509
certificates from an LDAP certificate directory.
</p>
<p>
When Bacchus wants to send an encrypted message to Cupid, he needs Cupid's
public key. In many setups he gets the key with a certificate from some
directory, say one run by Mercury. Mercury however then knows that
Bacchus wants to send a secret message to Cupid&mdash;there's part of the secret
gone! What Bacchus would prefer is if he could fetch Cupid's certificate from
Mercury, and Mercury could only learn that Bacchus retrieved <em>some</em>
certificate from his directory.
</p>

<h2>Approach</h2>
<p>
We make use of <em><a
href="http://www.cs.dartmouth.edu/~sws/research/#tech">secure
coprocessors</a></em> (SCOP) at the server site.
</p>

<p>
A trivial solution to the problem would be to put the whole database (X.509
directory in our case) inside the coprocessor. Then, Aphro could connect
securely (eg. SSL) to the SCOP and retrieve her desired certificate. Since
computation in the SCOP cannot be observed, even by root at the host machine
(<em>root secure</em>), the certificate retrieval is private to Aphro.
</p>

<p>
The problem with the above is that the current SCOP of choice&ndash;the IBM
4758&ndash;has 4MB of RAM. Thus, the database has to be stored partially or
fully outside the SCOP, on the host. The challenge then becomes that the SCOP,
on behalf of Aphro, privately retrieves an item from a database stored on the
untrusted host.
</p>

<p>
The essence of the current approach is that the SCOP performs a <em>private
permutation</em> on the database, and then reads items directly from the
permuted database. The permutation is private in the sense that the host should
not know the correspondence between items in the original and permuted datasets.
We currently use a Benes permutation network to carry out the permutation.
</p>

<p>
Lately we have been investigating how to compute and perform a private
permutation using a logarithmic amount of space inside the SCOP. The previous
approach required using <span class="math">O(N lg N)</span> bits to store a
random permutation, and that much again to compute the routing of the Benes
network.
</p>


<h2>Prototype</h2>
<ul>
<li><a href="privdir-2.tar.gz">privdir.tar.gz</a> <span class="date">1 August,
2003</span>.</li>
<li><a href="privdir.tar.gz">privdir.tar.gz</a> <span class="date">12 February,
      2003</span>.</li>
</ul>


<h2>Workshop Paper</h2>
Linked from the <a href="../publications.html">publications</a> page.

<h2>Tech Report</h2>
<a href="http://www.cs.dartmouth.edu/reports/abstracts/TR2003-442/">Dartmouth
TR2003-442</a>


    <hr>
    <address><a href="http://www.cs.dartmouth.edu/~sasho/">Alex Iliev</a></address>
<!-- Created: Wed Feb 12 17:38:38 EST 2003 -->
<!--time-start-->
Last modified: Feb 20, 2004
<!--time-end-->
  </body>
</html>
