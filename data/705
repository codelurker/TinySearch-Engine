http://www.cs.dartmouth.edu/~cbk/68/05winter/index.html
3
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv=content-type content="text/html">
<title>CS 68: Principles of Programming Languages, Winter 2005</title>
</head>

<body bgcolor="#EEEEEE">
<table border=0 cellpadding=3 width=750>

<tr>
<td colspan="2"><h2>CS 68: Principles of Programming Languages, Winter 2005</h2></td>
</tr>

<tr>
<td><b>Instructor</b></td> 
<td><a href="http://www.cs.dartmouth.edu/~cbk/">Chris
Bailey-Kellogg</a></td>
</tr>

<tr>
<td valign="top"><b>Office hours</b></td>
<td>Tentatively Monday 1:35-2:35, Wednesday 3:00-4:00, and Thursday 11:00-12:00; or by appointment.</td>
</tr>

<tr>
<td><b>TA</b></td> 
<td><a href="http://www.cs.dartmouth.edu/~cmasone/">Chris
Masone</a></td>
</tr>

<tr>
<td valign="top"><b>TA hours</b></td> 
<td>Office (060 Sudikoff): tentatively Tuesday 3:00-4:00 and Wednesday 2:00-3:00; special lab hours near due dates.</td>
</tr>

<tr>
<td><b>Class</b></td>
<td>MWF 12:30-1:35; x-hour T 1:00-1:50</td>
</tr>

<tr>
<td valign="top"><b>Text</b></td> 
<td>Peter Van Roy and Seif Haridi, <i>Concepts, Techniques, and
Models of Computer Programming</i>, MIT Press, 2004.  
<a href="http://www.info.ucl.ac.be/people/PVR/book.html">Book website</a>
(includes errata, blurbs/reviews, book details, etc.).</td></tr>

<tr><td><hr></td><td><hr></td></tr>

<tr>
<td valign="top"><b>Overview</b></td>
<td><p>This course studies how different programming languages support the
development and implementation of software systems.  We focus on the
underlying <i>computation models</i> that formally define how
computations are carried out and provide data types and operations
with which to program.  In general, the choice of computation model
affects how to approach an implementation task, which programming
techniques and design principles to employ, and how to reason about
the resulting programs.  Significant and diverse computation models
include declarative, concurrent (declarative, message-passing, and
shared state), explicit state, object-oriented, relational, and
constraint.</p>

<p>In order to avoid getting bogged down in syntactic differences in
programming languages (there is <a
href="http://www.99-bottles-of-beer.net/">plenty of that</a>), this
course adopts a unified approach based on the <i>Oz</i> language, as
implemented in the <i>Mozart</i> programming system.  The <a
href="http://www.mozart-oz.org/">Mozart/Oz</a> website overviews the
language features; the key for us is that it supports the diversity of
computation models listed above, with very little baggage distracting
from the fundamental principles.</p>
</td></tr>

<tr><td><hr></td><td><hr></td></tr>

<tr>
<td valign="top"><b>Course requirements</b></td>
<td>
<p>The goal of the course is to gain broad exposure to the principles
of programming languages.  Homeworks (which include programming
exercises) will provide focal points for diving in and working under
each different computational model.  These will account for 50% of the
grade.  In addition, a group project/presentation will exercise the
useful skill of transferring an understanding of a programming
paradigm across languages.  This will account for 20% of the grade.
Finally, two quizzes (one at midterm and one during finals week) will
provide the remaining 30% of the grade.
</p>

<p>All students are expect to read, understand, and follow the <a
href="policies.html">course policies</a>, which cover collaboration,
the mechanism for submitting homework, and so forth.</p>

<p>The <a href="schedule.html">course schedule</a> lists due dates,
topics, and reading.</p>
</td>
</tr>

<tr><td><hr></td><td><hr></td></tr>
<tr>
<td><a href="http://www.mozart-oz.org/"><img src="mozart-69x30.gif"
width="69" alt="Mozart/Oz"></a></td>
<td align="right">
<a href="http://www.cs.dartmouth.edu/~cbk/68/">CS 68</a><br>
<a href="http://www.cs.dartmouth.edu/~cbk/">Chris Bailey-Kellogg</a><br>
<!-- hhmts start -->
Last modified: Tue Feb  1 21:42:18 EST 2005
<!-- hhmts end -->
</td>
</tr>

</table>

</body>
</html>
